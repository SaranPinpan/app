{"version":3,"sources":["./src/app/express/express.component.ts","./src/app/express/express.component.html","./src/app/first/first.component.ts","./src/app/first/first.component.html","./src/app/second/second.component.ts","./src/app/second/second.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/node/node.component.ts","./src/app/node/node.component.html","./src/app/angular/angular.component.ts","./src/app/angular/angular.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-express',\n  templateUrl: './express.component.html',\n  styleUrls: ['./express.component.css']\n})\nexport class ExpressComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<style>\n    .indent {\n        text-indent: 2em;\n    }\n</style>\n<div class=\"display-4 text-center user-select-none\">Express.js</div>\n<div class=\"dropdown-divider mt-3\"></div>\n<div class=\"text-justify indent\">\n    <p>\n        <b>Express.js</b>, or simply <b>Express</b>, is a back end web application framework for Node.js\n        Express has many features that helps us create a web easier such as\n        allows to set up middlewares to respond to HTTP Requests,\n        defines a routing table which is used to perform different actions based on HTTP Method and URL,\n        allows to dynamically render HTML Pages based on passing arguments to templates.\n    </p>\n</div>\n<div class=\"mt-4\">\n    <h4>Installing Express</h4>\n    <div>Firstly, install the Express framework globally using NPM so that it can be used to create a web application using node terminal.</div>\n    <div class=\"card bg-dark my-2\">\n        <div class=\"card-body\">\n            <code class=\"text-white user-select-none\">$ </code><code class=\"text-white\">npm install express --save</code>\n        </div>\n    </div>\n    <div>You should install the following important modules along with express −</div>\n    <div class=\"card bg-dark my-2\">\n        <div class=\"card-body\">\n            <code class=\"text-white user-select-none\">$ </code><code class=\"text-white\">npm install body-parser --save</code>\n        </div>\n    </div>\n</div>\n\n<div class=\"mt-4\">\n    <h4>Hello world Example</h4>\n    <div>Following is a very basic Express app which starts a server and listens on port 8081 for connection. This app responds with Hello World! for requests to the homepage. For every other path, it will respond with a 404 Not Found.</div>\n    <div class=\"card bg-light my-2\">\n        <div class=\"card-body\">\n    <pre><code>\n    var express = require('express');\n    var app = express();\n\n    app.get('/', function (req, res) &#123;\n    res.send('Hello World');\n    &#125;)\n\n    var server = app.listen(8080, function () &#123;\n        var host = server.address().address\n        var port = server.address().port\n        \n        console.log(\"Example app listening at http://%s:%s\", host, port)\n    &#125;)</code></pre>\n        </div>\n    </div>\n    <div>Save the above code in a file named <mark>server.js</mark> and run it with the following command.</div>\n    <div class=\"card bg-dark my-2\">\n        <div class=\"card-body\">\n            <code class=\"text-white user-select-none\">$ </code><code class=\"text-white\">node server.js</code>\n        </div>\n    </div>\n    <div>You will see the following output −</div>\n    <div class=\"card bg-dark my-2\">\n        <div class=\"card-body\">\n            <samp class=\"text-white user-select-none\">Example app listening at http://0.0.0.0:8080</samp>\n        </div>\n    </div>\n    <div class=\"mb-2\">Open http://127.0.0.1:8081/ in any browser to see the following result.</div>\n    <div class=\"row justify-content-center\">\n        <img src=\"../../assets/hello-world.png\" class=\"img-fluid w-75\" alt=\"Hello World\">\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-first',\n  templateUrl: './first.component.html',\n  styleUrls: ['./first.component.css']\n})\nexport class FirstComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>first works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-second',\n  templateUrl: './second.component.html',\n  styleUrls: ['./second.component.css']\n})\nexport class SecondComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>second works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Home</p>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'App';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-primary sticky-top shadow-sm\">\n  <div class=\"container\">\n    <!-- <a class=\"navbar-brand h4\" routerLink=\"/\" routerLinkActive=\"active\">{{ title }}</a> -->\n    <a class=\"navbar-brand h4\" routerLink=\"/\" routerLinkActive=\"active\">&#8607;&#8607;&#8607;</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-controls=\"navbar\"\n      aria-expanded=\"true\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbar\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a routerLink=\"/nodejs\" routerLinkActive=\"active\" class=\"nav-link\">Node.js</a>\n        </li>\n        <li class=\"nav-item\">\n          <a routerLink=\"/express\" routerLinkActive=\"active\" class=\"nav-link\">Express.js</a>\n        </li>\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Tutorials\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n            <!-- <a class=\"dropdown-item text-center\" href=\"/nodejs\">Node.js</a>\n            <a class=\"dropdown-item text-center\" href=\"/express\">Express</a>\n            <div class=\"dropdown-divider\"></div> -->\n            <a class=\"dropdown-item\" href=\"/angular\">Angular</a>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n\n<!-- The routed views render in the <router-outlet>-->\n<div class=\"container my-3 rounded\">\n  <div class=\"card shadow-sm p-3 mb-5 bg-white rounded\">\n    <div class=\"card-body\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FirstComponent } from './first/first.component';\nimport { SecondComponent } from './second/second.component';\nimport { HomeComponent } from './home/home.component';\nimport { NodeComponent } from './node/node.component';\nimport { AngularComponent } from './angular/angular.component';\nimport { ExpressComponent } from './express/express.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FirstComponent,\n    SecondComponent,\n    HomeComponent,\n    NodeComponent,\n    AngularComponent,\n    ExpressComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-node',\n  templateUrl: './node.component.html',\n  styleUrls: ['./node.component.css']\n})\nexport class NodeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<style>\n  .indent {\n    text-indent: 2em;\n  }\n</style>\n\n<div>\n  <h1 class=\"display-4 text-center\">Node.js</h1>\n  <div class=\"dropdown-divider mt-3\"></div>\n  <p class=\"mb-0 text-justify indent\">\n    <b>Node.js</b> is an open-source, cross-platform, back end, JavaScript\n    runtime environment that executes JavaScript code outside a web browser.\n    Node.js lets developers use JavaScript to write command line tools and for\n    server-side scripting—running scripts server-side to produce dynamic web\n    page content before the page is sent to the user's web browser.\n    Consequently, Node.js represents a \"JavaScript everywhere\" paradigm,\n    unifying web-application development around a single programming language,\n    rather than different languages for server- and client-side scripts.\n  </p>\n</div>\n<div class=\"mt-4\">\n  <h4>Download node.js</h4>\n  <p>\n    The official Node.js website has installation instructions for Node.js:\n    <a href=\"https://nodejs.org\" class=\"text-decoration-none\"\n      >https://nodejs.org</a\n    >\n  </p>\n</div>\n\n<diV class=\"mt-2\">\n  <h4>Getting Started</h4>\n  Once you have downloaded and installed Node.js on your computer, let's try to\n  display \"Hello World\" in a web browser.\n</diV>\n<div>\n  Create a Node.js file named \"<b>app.js</b>\", and add the following code:\n</div>\n<div class=\"card bg-light my-2\">\n  <pre><code>\n    var http = require('http');\n\n    http.createServer(function (req, res) &#123;\n        res.writeHead(200, &#123;'Content-Type': 'text/html'&#125;);\n        res.end('Hello World!');\n    &#125;).listen(8080);</code></pre>\n</div>\n<div>Open cmd and navigate to the folder that contains the file \"app.js\", write <mark>node app.js</mark> and hit enter:</div>\n<div class=\"card bg-dark my-2\">\n  <pre class=\"text-white\"><code class=\"user-select-none\">\n    C:\\Users\\<em>Your Name</em>&#62; </code><code>node app.js</code></pre>\n</div>\n<div>Now, your computer works as a server!</div>\n<div>If anyone tries to access your computer on port 8080, they will get a \"Hello World!\" message in return!</div>\n<div>Start your internet browser, and type in the address: <a class=\"text-nodecoration\" href=\"http://localhost:8080\">http://localhost:8080</a></div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-angular',\n  templateUrl: './angular.component.html',\n  styleUrls: ['./angular.component.css']\n})\nexport class AngularComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>angular works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FirstComponent } from './first/first.component'\nimport { SecondComponent } from './second/second.component'\nimport { HomeComponent } from './home/home.component'\nimport { NodeComponent } from './node/node.component'\nimport { AngularComponent } from './angular/angular.component'\nimport { ExpressComponent } from './express/express.component'\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'first-component', component: FirstComponent},\n  {path: 'second-component', component: SecondComponent},\n  {path: 'nodejs', component: NodeComponent},\n  {path: 'angular', component: AngularComponent},\n  {path: 'express', component: ExpressComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}